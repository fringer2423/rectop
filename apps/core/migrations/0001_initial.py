# Generated by Django 4.1.2 on 2022-10-20 10:42

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('description', models.TextField(blank=True, max_length=500, null=True, verbose_name='Описание')),
                ('location', models.CharField(blank=True, max_length=30, null=True, verbose_name='Страна')),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('verify_code', models.CharField(blank=True, max_length=80, null=True, unique=True, verbose_name='Проверочный код')),
                ('job_title', models.CharField(blank=True, max_length=50, null=True, verbose_name='Должность')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('address', models.CharField(max_length=200, verbose_name='Адрес')),
                ('phone_number', models.CharField(max_length=20, verbose_name='Номер телефона')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('description', models.TextField(verbose_name='Описание')),
                ('short_description', models.TextField(verbose_name='Короткое описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('last_date_load_reviews', models.DateTimeField(default=datetime.datetime(2022, 10, 20, 0, 42, 27, 288576), verbose_name='Последняя дата загрузки отзывов')),
            ],
            options={
                'verbose_name': 'Филиал',
                'verbose_name_plural': 'Филиалы',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название компании')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL, verbose_name='Владелец')),
            ],
            options={
                'verbose_name': 'Компания',
                'verbose_name_plural': 'Компании',
            },
        ),
        migrations.CreateModel(
            name='Rate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_branches', models.IntegerField(default=0, verbose_name='Количество филиалов')),
                ('type', models.CharField(choices=[(0, 'Тестовый'), (1, 'Начальный'), (2, 'Средний'), (3, 'Профессиональный')], default=0, max_length=1)),
            ],
            options={
                'verbose_name': 'Тариф',
                'verbose_name_plural': 'Тарифы',
            },
        ),
        migrations.CreateModel(
            name='RateInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_rate', models.IntegerField(verbose_name='Первый тариф')),
                ('second_rate', models.IntegerField(verbose_name='Второй тариф')),
                ('third_rate', models.IntegerField(verbose_name='Третий тариф')),
            ],
            options={
                'verbose_name': 'Информация о тарифах',
                'verbose_name_plural': 'Информации о тарифах',
            },
        ),
        migrations.CreateModel(
            name='WorkDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_the_week', models.PositiveIntegerField(choices=[(1, 'Понедельник'), (2, 'Вторник'), (3, 'Среда'), (4, 'Четверг'), (5, 'Пятница'), (6, 'Суббота'), (7, 'Воскресенье')], verbose_name='День недели')),
                ('start_time', models.TimeField(verbose_name='Начало рабочего дня')),
                ('end_time', models.TimeField(max_length=5, verbose_name='Окончание рабочего дня')),
                ('day_type', models.CharField(choices=[('weekday', 'Будний день'), ('holiday', 'Праздничный день'), ('day_off', 'Выходной')], max_length=255, verbose_name='day type')),
            ],
        ),
        migrations.CreateModel(
            name='Telebot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tg_id', models.CharField(max_length=100, verbose_name='ID в Telegram')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telebot_settings', to='core.branch', verbose_name='Филиал')),
            ],
            options={
                'verbose_name': 'Настройка отправки Telegram уведомлений',
                'verbose_name_plural': 'Настройки отправки Telegram уведомлений',
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('friday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='friday', to='core.workday', verbose_name='Пятница')),
                ('monday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monday', to='core.workday', verbose_name='Понедельник')),
                ('saturday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='saturday', to='core.workday', verbose_name='Суббота')),
                ('sunday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sunday', to='core.workday', verbose_name='Воскресенье')),
                ('thursday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='thursday', to='core.workday', verbose_name='Четверг')),
                ('tuesday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tuesday', to='core.workday', verbose_name='Вторник')),
                ('wednesday', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wednesday', to='core.workday', verbose_name='Среда')),
            ],
            options={
                'verbose_name': 'График работы',
                'verbose_name_plural': 'Графики работы',
            },
        ),
        migrations.CreateModel(
            name='ReviewSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mask', models.TextField(verbose_name='Маска для отзыва')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_settings', to='core.company', verbose_name='Компания')),
            ],
            options={
                'verbose_name': 'Настройка автоответов на отзывы',
                'verbose_name_plural': 'Настройки автоответов на отзывы',
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100, verbose_name='Полное имя')),
                ('link', models.CharField(max_length=200, verbose_name='Ссылка')),
                ('status', models.CharField(choices=[(0, 'Не прочитано'), (1, 'Прочитано'), (2, 'С ответом')], default=0, max_length=20, verbose_name='Статус')),
                ('rating', models.CharField(choices=[(0, 'Очень плохо'), (1, 'Плохо'), (2, 'Неплохо'), (3, 'Средне'), (4, 'Хорошо'), (5, 'Отлично')], max_length=20, verbose_name='Оценка')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('answered_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата ответа')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.branch', verbose_name='Филиал')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
            },
        ),
        migrations.CreateModel(
            name='QRCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug_name', models.SlugField(blank=True, max_length=200, unique=True, verbose_name='URL')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('image', models.FileField(blank=True, null=True, upload_to='')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='QRCode', to='core.branch', verbose_name='Филиал')),
            ],
            options={
                'verbose_name': 'QRCode',
                'verbose_name_plural': 'QRCodes',
            },
        ),
        migrations.CreateModel(
            name='Connect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[(0, 'Yandex'), (1, '2GIS'), (2, 'Google'), (3, 'Flamp'), (4, 'Zoon'), (5, 'Yell')], max_length=20, verbose_name='Платформа')),
                ('key', models.CharField(max_length=100, verbose_name='Ключ для подключения')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.branch', verbose_name='Филиал')),
            ],
            options={
                'verbose_name': 'Настройка соединения',
                'verbose_name_plural': 'Настройки соединения',
            },
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='branchs', to='core.company', verbose_name='Компания'),
        ),
        migrations.AddField(
            model_name='branch',
            name='schedule',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.schedule', verbose_name='График работы'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата создания')),
                ('body', models.TextField(verbose_name='Ответ на отзыв')),
                ('type', models.CharField(choices=[(0, 'Ответ создан автоматически'), (1, 'Ответ от пользователя')], max_length=100, verbose_name='Тип ответа')),
                ('review', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='core.review', verbose_name='Отзыв')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ на отзыв',
                'verbose_name_plural': 'Ответы на отзывы',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='rate',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.rate', verbose_name='Тариф'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
