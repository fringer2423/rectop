version: '3.10'

services:
  rectop-backend:
    build: ./
    container_name: rectop-backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./:/usr/src/app/api/
    ports:
      - "8000:8000"
    env_file:
      - .env.dev
    depends_on:
      - rectop-db
      - redis

  rectop-db:
    image: postgres:14-alpine
    container_name: rectop-db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=rectop
      - POSTGRES_PASSWORD=rectop
      - POSTGRES_DB=rectop_dev

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    container_name: frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/usr/src/app/frontend
      - /usr/src/app/frontend/node_modules

  redis:
    container_name: redis
    image: redis:alpine

  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8081:8081"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=mypass
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - rabbitmq_go_net

volumes:
  postgres_data:

networks:
  rabbitmq_go_net:
    driver: bridge